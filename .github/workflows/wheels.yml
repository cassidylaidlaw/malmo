name: Build wheels

on: [push, pull_request, workflow_dispatch]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: [self-hosted, "${{ matrix.os }}"]
    strategy:
      matrix:
        os: [macOS]

    steps:
      - uses: actions/checkout@v3

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.12.0

      - name: Cache downloads
        uses: actions/cache@v3
        with:
          path: downloads
          key: ${{ runner.os }}-downloads

      - name: Download dependencies
        run: |
          mkdir -p downloads
          cd downloads
          if [ ! -e boost_1_76_0.tar.bz2 ]; then
            wget --no-verbose --no-check-certificate 'https://sourceforge.net/projects/boost/files/boost/1.76.0/boost_1_76_0.tar.bz2'
          fi

      - name: Build wheels
        env:
          CIBW_BUILD: cp39-*
          CIBW_SKIP: "*_i686 *-musllinux_*"
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_BEFORE_BUILD_LINUX: ./install_boost_linux.sh
          CIBW_BEFORE_BUILD_MACOS: ./install_boost_macos.sh
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}
        run: |
          cp VERSION scripts/python-wheel/package/
          cp -r Malmo/src scripts/python-wheel/package/src
          cd scripts/python-wheel/package
          tar xf ../../../downloads/boost_1_76_0.tar.bz2
          CIBW_ENVIRONMENT="REPAIR_LIBRARY_PATH=$(pwd)/boost_1_76_0/lib" python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: scripts/python-wheel/package/wheelhouse/*.whl
